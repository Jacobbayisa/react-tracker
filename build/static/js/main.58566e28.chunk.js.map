{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","date","setDate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58566e28.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nconst Button = ({ color, text , onClick }) => {\r\n    \r\n    return (\r\n        <button onClick = {onClick} style ={{backgroundColor:color}} className='btn'> {text} \r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color:\"lightblue\"\r\n}\r\n\r\nButton.propTypes ={\r\n    color:PropTypes.string,\r\n    text:PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button;","import PropTypes from \"prop-types\"\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 > {title}</h1>\r\n            <Button onClick ={onAdd} text = { showAdd ? 'Close' : 'Add'} color = { showAdd ? 'red' : 'green' }/>\r\n        </header>\r\n    )\r\n}\r\n\r\n// HOw to use css in jsx\r\n// const HeadingStyle ={\r\n//     color:'red',\r\n//     backgroundColor:'black'\r\n// }\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\nHeader.defaultProps = {\r\n    title: \"Task Tracker\",\r\n}\r\n\r\nexport default Header;","import { FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    \r\n    return(\r\n        <div className= {`task  ${task.reminder ? 'reminder' : ''}`} onDoubleClick = { () => onToggle(task.id)}>\r\n            <h3> {task.text} <FaTimes onClick = { () => onDelete(task.id)} \r\n             style ={{ color:\"red\", cursor:\"pointer\"}}/> </h3>\r\n            <p> {task.day } </p>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Task;","import Task from './Task'\r\n\r\nconst Tasks = ( { tasks , onDelete, onToggle}) => {\r\n\r\n    return (\r\n        <> \r\n         {tasks.map((task) => (\r\n             <Task key={task.id} task={task} onDelete ={onDelete} onToggle = {onToggle} />\r\n         ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import { useState} from 'react'\r\n\r\nconst AddTask = ( { onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [date, setDate] = useState ('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd( {text, date, reminder})\r\n\r\n        setText('')\r\n        setDate('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className = \"add-form\" onSubmit = {onSubmit}>\r\n            <div className = \"form-control\">\r\n                <label> Tasks </label>\r\n                <input type = \"text\" placeholder = \"Add Task\" value ={text}\r\n                onChange = { (e) => setText(e.target.value)} />\r\n            </div>\r\n\r\n            <div className = \"form-control\">\r\n                <label> Date and Time </label>\r\n                <input type = \"text\" placeholder = \"Add Date and Time\" value = {date}\r\n                onChange = { (e) => setDate(e.target.value)} />\r\n            </div>\r\n\r\n            <div className = \"form-control form-control-check\">\r\n                <label> Reminder </label>\r\n                <input type = \"checkbox\"  value= {reminder}\r\n                onChange = { (e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type=\"submit\" value =\"Save Task\"  className = 'btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nimport { useState } from 'react'\r\n\r\n\r\nfunction App() {\r\n  const[showAddTask, setShowAddTask] = useState(false)\r\n  const[tasks, setTasks] = useState(\r\n    [\r\n      {\r\n        \"id\": 1,\r\n        \"text\": \"Doctors Appointment\",\r\n        \"day\": \"Feb 5th at 2:30pm\",\r\n        \"reminder\": true\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"text\": \"Meeting at School\",\r\n        \"day\": \"Feb 6th at 1:30pm\",\r\n        \"reminder\": true\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"text\": \"It is nice Jacob\",\r\n        \"Day\": \"Day of your anniversary\",\r\n        \"reminder\": true\r\n      }\r\n    ]\r\n  )\r\n\r\n  // add Task\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 1000) + 1\r\n    const newTask = {id, ...task}\r\n    setTasks( [...tasks, newTask])\r\n  }\r\n\r\n  const deleteTask = (id) => {\r\n    \r\n      setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  // Toggle reminder for left border \r\n  const toggleReminder = (id) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, reminder: !task.reminder} : task\r\n      )\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <Header onAdd = { () => setShowAddTask(!showAddTask)} showAdd = {showAddTask} />\r\n      {showAddTask && <AddTask onAdd = {addTask}/> }\r\n      { tasks.length > 0 ? <Tasks tasks = {tasks} onDelete = {deleteTask}  onToggle ={toggleReminder}/> : \" No list to show\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}