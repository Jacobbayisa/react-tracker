{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","date","setDate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","About","to","Footer","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchSingleTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.553b2685.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nconst Button = ({ color, text , onClick }) => {\r\n    \r\n    return (\r\n        <button onClick = {onClick} style ={{backgroundColor:color}} className='btn'> {text} \r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color:\"lightblue\"\r\n}\r\n\r\nButton.propTypes ={\r\n    color:PropTypes.string,\r\n    text:PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button;","import PropTypes from \"prop-types\"\r\nimport { useLocation } from \"react-router\"\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 > {title}</h1>\r\n            {location.pathname === '/' && <Button onClick ={onAdd} text = { showAdd ? 'Close' : 'Add'} color = { showAdd ? 'red' : 'green' }/> }\r\n        </header>\r\n    )\r\n}\r\n\r\n// HOw to use css in jsx\r\n// const HeadingStyle ={\r\n//     color:'red',\r\n//     backgroundColor:'black'\r\n// }\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\nHeader.defaultProps = {\r\n    title: \"Task Tracker\",\r\n}\r\n\r\nexport default Header;","import { FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    \r\n    return(\r\n        <div className= {`task  ${task.reminder ? 'reminder' : ''}`} onDoubleClick = { () => onToggle(task.id)}>\r\n            <h3> {task.text} <FaTimes onClick = { () => onDelete(task.id)} \r\n             style ={{ color:\"red\", cursor:\"pointer\"}}/> </h3>\r\n            <p> {task.day } </p>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Task;","import Task from './Task'\r\n\r\nconst Tasks = ( { tasks , onDelete, onToggle}) => {\r\n\r\n    return (\r\n        <> \r\n         {tasks.map((task) => (\r\n             <Task key={task.id} task={task} onDelete ={onDelete} onToggle = {onToggle} />\r\n         ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import { useState} from 'react'\r\n\r\nconst AddTask = ( { onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [date, setDate] = useState ('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd( {text, date, reminder})\r\n\r\n        setText('')\r\n        setDate('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className = \"add-form\" onSubmit = {onSubmit}>\r\n            <div className = \"form-control\">\r\n                <label> Tasks </label>\r\n                <input type = \"text\" placeholder = \"Add Task\" value ={text}\r\n                onChange = { (e) => setText(e.target.value)} />\r\n            </div>\r\n\r\n            <div className = \"form-control\">\r\n                <label> Date and Time </label>\r\n                <input type = \"text\" placeholder = \"Add Date and Time\" value = {date}\r\n                onChange = { (e) => setDate(e.target.value)} />\r\n            </div>\r\n\r\n            <div className = \"form-control form-control-check\">\r\n                <label> Reminder </label>\r\n                <input type = \"checkbox\"  value= {reminder}\r\n                onChange = { (e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type=\"submit\" value =\"Save Task\"  className = 'btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask"," import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h3> Version 1.0.0</h3>\r\n            <Link to =\"/\"> Return</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import { Link } from 'react-router-dom'\r\nconst Footer = () => {\r\n    return(\r\n        <footer>\r\n            <p> Copyright &copy: 2021</p>\r\n            <Link to =\"/about\"> About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import { BrowserRouter as Router, Route} from \"react-router-dom\"\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport About from './components/About'\r\nimport Footer from './components/Footer'\r\n\r\nimport { useState, useEffect} from 'react'\r\n\r\n\r\nfunction App() {\r\n  const[showAddTask, setShowAddTask] = useState(false)\r\n  const[tasks, setTasks] = useState( [])\r\n  \r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n    \r\n    getTasks()\r\n  }, [])\r\n\r\n  //fetch data from json-server\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  //fetch a single task from server\r\n  const fetchSingleTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n  // add Task\r\n  const addTask =  async (task) => {\r\n\r\n    const res = await fetch('http://localhost:5000/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n    \r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n    // const id = Math.floor(Math.random() * 1000) + 1\r\n    // const newTask = {id, ...task}\r\n    // setTasks( [...tasks, newTask])\r\n  }\r\n\r\n  const deleteTask = async (id) => {\r\n     await fetch(`http://localhost:5000/tasks/${id}`, {\r\n       method: 'DELETE',\r\n     })\r\n      setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  // Toggle reminder for left border \r\n  const toggleReminder =  async (id) => {\r\n    const taskToToggle = await fetchSingleTask(id)\r\n    const updTask = { ...taskToToggle,\r\n    reminder: !taskToToggle.reminder}\r\n\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }, \r\n    body: JSON.stringify(updTask) \r\n  })\r\n\r\n  const data = await res.json()\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, reminder: data.reminder} : task\r\n      )\r\n    )\r\n  }\r\n  return (\r\n    <Router>\r\n\r\n      <div className=\"container\">\r\n        <Header onAdd = { () => setShowAddTask(!showAddTask)} showAdd = {showAddTask} />\r\n        \r\n        <Route path =\"/\" exact render = {(props) => {\r\n          return(\r\n            <>\r\n              {showAddTask && <AddTask onAdd = {addTask}/> }\r\n              { tasks.length > 0 ? <Tasks tasks = {tasks} onDelete = {deleteTask}  \r\n              onToggle ={toggleReminder}/> : \" No list to show\"}\r\n            </>\r\n          )\r\n        }} />\r\n        \r\n        <Route path= '/about' component={About}/>\r\n        <Footer/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}